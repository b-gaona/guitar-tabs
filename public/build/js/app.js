const undoArray=[],redoArray=[];let flag=!0;function updateDataInfo(){putDataTabs(),putDataColumns(),putDataStrings()}function putDataTabs(){const a=document.querySelectorAll(".tabs");let n=1;a.forEach(a=>{a.setAttribute("data-tab",n),n++})}function putDataColumns(){const a=document.querySelectorAll(".tabs__column");let n=1;a.forEach(a=>{a.setAttribute("data-col",n),n++})}function putDataStrings(){const a=document.querySelectorAll(".tabs__column .tabs__cell");let n=1;a.forEach(a=>{a.setAttribute("data-string",n),n++,7==n&&(n=1)})}function addTab(){deleteActiveCell();const a=document.querySelector(".content__tabs"),n=document.createElement("div");n.classList.add("tabs"),n.innerHTML='\n  <div class="tabs__column">\n    <span class="tabs__cell">E</span>\n    <span class="tabs__cell">B</span>\n    <span class="tabs__cell">G</span>\n    <span class="tabs__cell">D</span>\n    <span class="tabs__cell">A</span>\n    <span class="tabs__cell">E</span>\n  </div>\n  <div class="tabs__column">\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n  </div>\n  <div class="tabs__column">\n    <span class="tabs__cell tabs__cell-active">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n  </div>\n  ',a.appendChild(n)}function deleteTab(){document.querySelector(".content__tabs").lastChild.remove()}function saveCommand(a,n,e=!0){undoArray.push({action:{fn:a},inverse:{revFn:n}}),e&&(redoArray.length=0)}function undo(){const a=undoArray.pop();if(a){const n=a.inverse.revFn;n(),addActiveCell(a.action.index),redoArray.push({action:{fn:n},inverse:{revFn:a.action.fn}})}}function redo(){const a=redoArray.pop(),{string:n,col:e,tab:t}=getActiveCell();if(a){const s=a.inverse.revFn;saveCommand(s,a.action.fn,!1),undoArray.length>0&&(undoArray[undoArray.length-1].action.index={string:n,col:e,tab:t}),s(),updateDataInfo()}}function addLine(){const{tabElement:a}=getActiveCell();deleteActiveCell();const n=document.createElement("div");n.classList.add("tabs__column"),n.innerHTML='\n    <span class="tabs__cell tabs__cell-active">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n  ',a.appendChild(n)}function deleteLine(){const{tabElement:a}=getActiveCell();a.lastChild.remove()}function addBlankCol(){const{tabElement:a}=getActiveCell();deleteActiveCell();const n=document.createElement("div"),e=document.createElement("div");n.classList.add("tabs__column"),e.classList.add("tabs__column"),n.innerHTML='\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n  ',e.innerHTML='\n    <span class="tabs__cell tabs__cell-active">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n  ',a.appendChild(n),a.appendChild(e)}function deleteBlankCol(){const{tabElement:a}=getActiveCell();a.lastChild.remove(),a.lastChild.remove()}function deleteActiveCell(){const{cellElement:a,string:n,col:e,tab:t}=getActiveCell();undoArray.length>0&&(undoArray[undoArray.length-1].action.index={string:n,col:e,tab:t}),a.classList.remove("tabs__cell-active")}function addActiveCell({string:a,col:n,tab:e}){document.querySelector(`div[data-tab='${e}']`).querySelector(`div[data-col='${n}']`).querySelector(`span[data-string='${a}']`).classList.add("tabs__cell-active")}function getActiveCell(){const a=document.querySelector(".tabs__cell-active"),n=a.parentElement,e=n.parentElement;return{string:a.dataset.string,col:n.dataset.col,tab:e.dataset.tab,tabElement:e,colElement:n,cellElement:a}}document.addEventListener("DOMContentLoaded",()=>{putDataTabs(),putDataStrings(),putDataColumns(),document.addEventListener("keydown",a=>{switch(a.key){case"t":saveCommand(addTab,deleteTab),addTab(),updateDataInfo();break;case"q":undo();break;case"e":redo();break;case"Enter":saveCommand(addLine,deleteLine),addLine(),updateDataInfo();break;case"l":saveCommand(addBlankCol,deleteBlankCol),addBlankCol(),updateDataInfo()}document.querySelector("#helper").textContent=JSON.stringify(undoArray);document.querySelector("#helper2").textContent=JSON.stringify(redoArray)})});
//# sourceMappingURL=app.js.map
