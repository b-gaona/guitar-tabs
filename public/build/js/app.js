const undoArray=[],redoArray=[];function updateDataInfo(){putDataTabs(),putDataColumns(),putDataStrings()}function putDataTabs(){const e=document.querySelectorAll(".tabs");let a=1;e.forEach(e=>{e.setAttribute("data-tab",a),a++})}function putDataColumns(){const e=document.querySelectorAll(".tabs__column");let a=1;e.forEach(e=>{e.setAttribute("data-col",a),a++})}function putDataStrings(){const e=document.querySelectorAll(".tabs__column .tabs__cell");let a=1;e.forEach(e=>{e.setAttribute("data-string",a),a++,7==a&&(a=1)})}function addTab(){deleteActiveCell();const e=document.querySelector(".content__tabs"),a=document.createElement("div");a.classList.add("tabs"),a.innerHTML='\n  <div class="tabs__column">\n    <span class="tabs__cell">E</span>\n    <span class="tabs__cell">B</span>\n    <span class="tabs__cell">G</span>\n    <span class="tabs__cell">D</span>\n    <span class="tabs__cell">A</span>\n    <span class="tabs__cell">E</span>\n  </div>\n  <div class="tabs__column">\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n  </div>\n  <div class="tabs__column">\n    <span class="tabs__cell tabs__cell-active">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n  </div>\n  ',e.appendChild(a)}function deleteTab(){document.querySelector(".content__tabs").lastChild.remove()}function saveCommand(e,a,t=!0){undoArray.push({action:{fn:e},inverse:{revFn:a}}),t&&(redoArray.length=0)}function undo(){const e=undoArray.pop();if(e){const a=e.inverse.revFn;"move"!==a()&&addActiveCell(e.action.index),redoArray.push({action:{fn:a},inverse:{revFn:e.action.fn}})}}function redo(){const e=redoArray.pop(),{string:a,col:t,tab:n}=getActiveCell();if(e){const s=e.inverse.revFn;saveCommand(s,e.action.fn,!1),undoArray.length>0&&(undoArray[undoArray.length-1].action.index={string:a,col:t,tab:n}),s(),updateDataInfo()}}function addLine(){const{tabElement:e}=getActiveCell();deleteActiveCell();const a=document.createElement("div");a.classList.add("tabs__column"),a.innerHTML='\n    <span class="tabs__cell tabs__cell-active">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n  ',e.appendChild(a)}function deleteLine(){const{tabElement:e}=getActiveCell();e.lastChild.remove()}function addBlankCol(){const{tabElement:e}=getActiveCell();deleteActiveCell();const a=document.createElement("div"),t=document.createElement("div");a.classList.add("tabs__column"),t.classList.add("tabs__column"),a.innerHTML='\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n    <span class="tabs__cell">|</span>\n  ',t.innerHTML='\n    <span class="tabs__cell tabs__cell-active">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n    <span class="tabs__cell">-</span>\n  ',e.appendChild(a),e.appendChild(t)}function deleteBlankCol(){const{tabElement:e}=getActiveCell();e.lastChild.remove(),e.lastChild.remove()}function deleteActiveCell(){const{cellElement:e,string:a,col:t,tab:n}=getActiveCell();undoArray.length>0&&(undoArray[undoArray.length-1].action.index={string:a,col:t,tab:n}),e.classList.remove("tabs__cell-active")}function addActiveCell({string:e,col:a,tab:t}){document.querySelector(`div[data-tab='${t}']`).querySelector(`div[data-col='${a}']`).querySelector(`span[data-string='${e}']`).classList.add("tabs__cell-active")}function getActiveCell(){const e=document.querySelector(".tabs__cell-active"),a=e.parentElement,t=a.parentElement;return{string:e.dataset.string,col:a.dataset.col,tab:t.dataset.tab,tabElement:t,colElement:a,cellElement:e}}function moveDown(){const{cellElement:e,string:a,col:t,tab:n}=getActiveCell();return"6"!==a&&(undoArray.length>0&&(undoArray[undoArray.length-1].action.index={string:a,col:t,tab:n}),e.classList.remove("tabs__cell-active"),addActiveCell({string:+a+1,col:t,tab:n})),"move"}function moveUp(){const{cellElement:e,string:a,col:t,tab:n}=getActiveCell();return"1"!==a&&(e.classList.remove("tabs__cell-active"),addActiveCell({string:+a-1,col:t,tab:n})),"move"}function moveRight(){const{tabElement:e,cellElement:a,string:t,col:n,tab:s}=getActiveCell();return"35"!==n&&(a.classList.remove("tabs__cell-active"),verifyColumn(e,+n+1)?addActiveCell({string:t,col:+n+1,tab:s}):addActiveCell({string:t,col:n,tab:s})),"move"}function moveLeft(){const{tabElement:e,cellElement:a,string:t,col:n,tab:s}=getActiveCell();return"3"!==n&&(a.classList.remove("tabs__cell-active"),verifyColumn(e,+n-1)?addActiveCell({string:t,col:+n-1,tab:s}):addActiveCell({string:t,col:n,tab:s})),"move"}function verifyColumn(e,a){return e.querySelector(`div[data-col='${a}']`)}document.addEventListener("DOMContentLoaded",()=>{putDataTabs(),putDataStrings(),putDataColumns(),document.addEventListener("keydown",e=>{const{string:a,col:t}=getActiveCell();switch(e.key){case"t":saveCommand(addTab,deleteTab),addTab(),updateDataInfo();break;case"q":undo();break;case"e":redo();break;case"Enter":saveCommand(addLine,deleteLine),addLine(),updateDataInfo();break;case"l":saveCommand(addBlankCol,deleteBlankCol),addBlankCol(),updateDataInfo();break;case"s":"6"!==a&&(saveCommand(moveDown,moveUp),moveDown());break;case"w":"1"!==a&&(saveCommand(moveUp,moveDown),moveUp());break;case"a":"3"!==t&&(saveCommand(moveLeft,moveRight),moveLeft());break;case"d":"35"!==t&&(saveCommand(moveRight,moveLeft),moveRight())}document.querySelector("#helper").textContent=JSON.stringify(undoArray);document.querySelector("#helper2").textContent=JSON.stringify(redoArray)})});
//# sourceMappingURL=app.js.map
