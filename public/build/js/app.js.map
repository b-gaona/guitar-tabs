{"version":3,"sources":["app.js"],"names":["undoArray","redoArray","MAX_COLUMNS","GUITAR_TECHNIQUES","updateDataInfo","putDataTabs","putDataColumns","putDataStrings","tabs","document","querySelectorAll","cont","forEach","tab","setAttribute","addTab","deleteActiveCell","section","querySelector","newTab","createElement","classList","add","innerHTML","appendChild","deleteTab","lastChild","remove","saveCommand","fn","revFn","keep","cellElement","getActiveCell","push","action","key","textContent","inverse","length","undo","lastCommand","pop","addActiveCell","index","redo","string","col","typeNotes","addLine","tabElement","verifyColumn","newCol","deleteLine","addBlankCol","blankCol","deleteBlankCol","cell","parentElement","dataset","colElement","moveDown","moveUp","moveRight","moveLeft","note","txt","replace","substring","addEventListener","evt","isNaN","includes","JSON","stringify"],"mappings":"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","file":"app.js","sourcesContent":["const undoArray = [];\r\nconst redoArray = [];\r\nconst MAX_COLUMNS = \"35\";\r\nconst GUITAR_TECHNIQUES = [\"h\", \"p\", \"/\", \"b\", \"x\", \"Backspace\"];\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  putDataTabs();\r\n  putDataStrings();\r\n  putDataColumns();\r\n\r\n  document.addEventListener(\"keydown\", (evt) => {\r\n    const { string, col } = getActiveCell();\r\n    const { key } = evt;\r\n    switch (key) {\r\n      case \"t\":\r\n        saveCommand(addTab, deleteTab);\r\n        addTab();\r\n        updateDataInfo();\r\n        break;\r\n      case \"q\":\r\n        undo();\r\n        break;\r\n      case \"e\":\r\n        redo();\r\n        break;\r\n      case \"Enter\":\r\n        if (col !== MAX_COLUMNS) {\r\n          saveCommand(addLine, deleteLine);\r\n          addLine();\r\n          updateDataInfo();\r\n        }\r\n        break;\r\n      case \"l\":\r\n        saveCommand(addBlankCol, deleteBlankCol);\r\n        addBlankCol();\r\n        updateDataInfo();\r\n        break;\r\n      case \"s\":\r\n        if (string !== \"6\") {\r\n          saveCommand(moveDown, moveUp);\r\n          moveDown();\r\n        }\r\n        break;\r\n      case \"w\":\r\n        if (string !== \"1\") {\r\n          saveCommand(moveUp, moveDown);\r\n          moveUp();\r\n        }\r\n        break;\r\n      case \"a\":\r\n        if (col !== \"3\") {\r\n          saveCommand(moveLeft, moveRight);\r\n          moveLeft();\r\n        }\r\n        break;\r\n      case \"d\":\r\n        if (col !== MAX_COLUMNS) {\r\n          saveCommand(moveRight, moveLeft);\r\n          moveRight();\r\n        }\r\n        break;\r\n    }\r\n\r\n    if (!isNaN(key) || GUITAR_TECHNIQUES.includes(key)) {\r\n      typeNotes(key);\r\n    }\r\n\r\n    const id = document.querySelector(\"#helper\");\r\n    id.textContent = JSON.stringify(undoArray);\r\n    const id2 = document.querySelector(\"#helper2\");\r\n    id2.textContent = JSON.stringify(redoArray);\r\n  });\r\n});\r\n\r\nfunction updateDataInfo() {\r\n  putDataTabs();\r\n  putDataColumns();\r\n  putDataStrings();\r\n}\r\n\r\nfunction putDataTabs() {\r\n  const tabs = document.querySelectorAll(\".tabs\");\r\n  let cont = 1;\r\n\r\n  tabs.forEach((tab) => {\r\n    tab.setAttribute(\"data-tab\", cont);\r\n    cont++;\r\n  });\r\n}\r\n\r\nfunction putDataColumns() {\r\n  const tabs = document.querySelectorAll(\".tabs__column\");\r\n  let cont = 1;\r\n\r\n  tabs.forEach((tab) => {\r\n    tab.setAttribute(\"data-col\", cont);\r\n    cont++;\r\n  });\r\n}\r\n\r\nfunction putDataStrings() {\r\n  const tabs = document.querySelectorAll(\".tabs__column .tabs__cell\");\r\n  let cont = 1;\r\n\r\n  tabs.forEach((tab) => {\r\n    tab.setAttribute(\"data-string\", cont);\r\n    cont++;\r\n\r\n    if (cont == 7) {\r\n      cont = 1;\r\n    }\r\n  });\r\n}\r\n\r\nfunction addTab() {\r\n  deleteActiveCell();\r\n\r\n  const section = document.querySelector(\".content__tabs\");\r\n  const newTab = document.createElement(\"div\");\r\n\r\n  newTab.classList.add(\"tabs\");\r\n\r\n  newTab.innerHTML = `\r\n  <div class=\"tabs__column\">\r\n    <span class=\"tabs__cell\">E</span>\r\n    <span class=\"tabs__cell\">B</span>\r\n    <span class=\"tabs__cell\">G</span>\r\n    <span class=\"tabs__cell\">D</span>\r\n    <span class=\"tabs__cell\">A</span>\r\n    <span class=\"tabs__cell\">E</span>\r\n  </div>\r\n  <div class=\"tabs__column\">\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n  </div>\r\n  <div class=\"tabs__column\">\r\n    <span class=\"tabs__cell tabs__cell-active\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n  </div>\r\n  `;\r\n\r\n  section.appendChild(newTab);\r\n}\r\n\r\nfunction deleteTab() {\r\n  const section = document.querySelector(\".content__tabs\");\r\n  const lastChild = section.lastChild;\r\n  lastChild.remove();\r\n}\r\n\r\nfunction saveCommand(fn, revFn, keep = true) {\r\n  const {cellElement} = getActiveCell();\r\n  undoArray.push({\r\n    action: {\r\n      fn,\r\n      key: cellElement.textContent,\r\n    },\r\n    inverse: {\r\n      revFn,\r\n    },\r\n  });\r\n\r\n  //When something it's added the the redo array is restarted. This because we only need the redo after a undo, not after adding something.\r\n  if (keep) {\r\n    redoArray.length = 0;\r\n  }\r\n}\r\n\r\nfunction undo() {\r\n  const lastCommand = undoArray.pop();\r\n\r\n  const { cellElement } = getActiveCell();\r\n  const key = cellElement.textContent;\r\n  cellElement.textContent = \"—\";\r\n\r\n  if (lastCommand) {\r\n    const fn = lastCommand.inverse.revFn;\r\n\r\n    const result = fn();\r\n\r\n    //We add this conditional to avoid multiple calls to the addActiveCell function. The function that is going to be called is the one that is inside fn()\r\n    if (result !== \"move\") {\r\n      addActiveCell(lastCommand.action.index);\r\n    }\r\n\r\n    //We add the undo function to the redo array\r\n    redoArray.push({\r\n      action: {\r\n        fn,\r\n        key,\r\n      },\r\n      inverse: {\r\n        revFn: lastCommand.action.fn,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nfunction redo() {\r\n  const lastCommand = redoArray.pop();\r\n  const { string, col, tab } = getActiveCell();\r\n\r\n  if (lastCommand) {\r\n    const fn = lastCommand.inverse.revFn;\r\n    saveCommand(fn, lastCommand.action.fn, false); //False to avoid reset the redo\r\n\r\n    if (undoArray.length > 0) {\r\n      undoArray[undoArray.length - 1].action.index = { string, col, tab };\r\n    }\r\n\r\n    fn();\r\n    typeNotes(lastCommand.action.key);\r\n    updateDataInfo();\r\n  }\r\n}\r\n\r\nfunction addLine() {\r\n  const { tabElement } = getActiveCell();\r\n\r\n  if (!verifyColumn(tabElement, 35)) {\r\n    deleteActiveCell();\r\n    const newCol = document.createElement(\"div\");\r\n    newCol.classList.add(\"tabs__column\");\r\n    newCol.innerHTML = `\r\n    <span class=\"tabs__cell tabs__cell-active\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n  `;\r\n    tabElement.appendChild(newCol);\r\n  }\r\n}\r\n\r\nfunction deleteLine() {\r\n  const { tabElement } = getActiveCell();\r\n\r\n  tabElement.lastChild.remove();\r\n}\r\n\r\nfunction addBlankCol() {\r\n  const { tabElement } = getActiveCell();\r\n\r\n  deleteActiveCell();\r\n\r\n  const blankCol = document.createElement(\"div\");\r\n  const newCol = document.createElement(\"div\");\r\n\r\n  blankCol.classList.add(\"tabs__column\");\r\n  newCol.classList.add(\"tabs__column\");\r\n\r\n  blankCol.innerHTML = `\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n  `;\r\n\r\n  newCol.innerHTML = `\r\n    <span class=\"tabs__cell tabs__cell-active\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n  `;\r\n\r\n  tabElement.appendChild(blankCol);\r\n  tabElement.appendChild(newCol);\r\n}\r\n\r\nfunction deleteBlankCol() {\r\n  const { tabElement } = getActiveCell();\r\n\r\n  tabElement.lastChild.remove();\r\n  tabElement.lastChild.remove();\r\n}\r\n\r\nfunction deleteActiveCell() {\r\n  const { cellElement, string, col, tab } = getActiveCell();\r\n\r\n  if (undoArray.length > 0) {\r\n    undoArray[undoArray.length - 1].action.index = { string, col, tab };\r\n  }\r\n\r\n  cellElement.classList.remove(\"tabs__cell-active\");\r\n}\r\n\r\nfunction addActiveCell({ string, col, tab }) {\r\n  const currTab = document.querySelector(`div[data-tab='${tab}']`);\r\n  const currCol = currTab.querySelector(`div[data-col='${col}']`);\r\n  const currString = currCol.querySelector(`span[data-string='${string}']`);\r\n\r\n  currString.classList.add(\"tabs__cell-active\");\r\n}\r\n\r\nfunction getActiveCell() {\r\n  const cell = document.querySelector(\".tabs__cell-active\");\r\n  const col = cell.parentElement;\r\n  const tab = col.parentElement;\r\n\r\n  return {\r\n    string: cell.dataset.string,\r\n    col: col.dataset.col,\r\n    tab: tab.dataset.tab,\r\n    tabElement: tab,\r\n    colElement: col,\r\n    cellElement: cell,\r\n  };\r\n}\r\n\r\nfunction moveDown() {\r\n  const { cellElement, string, col, tab } = getActiveCell();\r\n\r\n  if (string !== \"6\") {\r\n    if (undoArray.length > 0) {\r\n      undoArray[undoArray.length - 1].action.index = { string, col, tab };\r\n    }\r\n    cellElement.classList.remove(\"tabs__cell-active\");\r\n    addActiveCell({ string: +string + 1, col, tab });\r\n  }\r\n  return \"move\";\r\n}\r\n\r\nfunction moveUp() {\r\n  const { cellElement, string, col, tab } = getActiveCell();\r\n\r\n  if (string !== \"1\") {\r\n    cellElement.classList.remove(\"tabs__cell-active\");\r\n    addActiveCell({ string: +string - 1, col, tab });\r\n  }\r\n  return \"move\";\r\n}\r\n\r\nfunction moveRight() {\r\n  const { tabElement, cellElement, string, col, tab } = getActiveCell();\r\n\r\n  if (col !== MAX_COLUMNS) {\r\n    cellElement.classList.remove(\"tabs__cell-active\");\r\n    if (verifyColumn(tabElement, +col + 1)) {\r\n      addActiveCell({ string, col: +col + 1, tab });\r\n    } else {\r\n      addActiveCell({ string, col, tab });\r\n    }\r\n  }\r\n  return \"move\";\r\n}\r\n\r\nfunction moveLeft() {\r\n  const { tabElement, cellElement, string, col, tab } = getActiveCell();\r\n\r\n  if (col !== \"3\") {\r\n    cellElement.classList.remove(\"tabs__cell-active\");\r\n    if (verifyColumn(tabElement, +col - 1)) {\r\n      addActiveCell({ string, col: +col - 1, tab });\r\n    } else {\r\n      addActiveCell({ string, col, tab });\r\n    }\r\n  }\r\n  return \"move\";\r\n}\r\n\r\nfunction verifyColumn(tabElement, col) {\r\n  return tabElement.querySelector(`div[data-col='${col}']`);\r\n}\r\n\r\nfunction typeNotes(note) {\r\n  const { cellElement } = getActiveCell();\r\n  const txt = cellElement.textContent;\r\n\r\n  if (txt !== \"|\" && note !== \" \") {\r\n    if (note !== \"Backspace\") {\r\n      cellElement.textContent = txt.replace(\"—\", \"\") + note;\r\n      return;\r\n    }\r\n\r\n    if (txt.length !== 1) {\r\n      cellElement.textContent = txt.substring(0, txt.length - 1);\r\n      return;\r\n    }\r\n\r\n    cellElement.textContent = \"—\";\r\n  }\r\n}\r\n"]}