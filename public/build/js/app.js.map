{"version":3,"sources":["app.js"],"names":["MIN_STRING","MAX_STRING","MIN_COLUMN","MAX_COLUMNS","GUITAR_TECHNIQUES","undoArray","redoArray","updateDataInfo","putDataTabs","putDataStrings","tabs","document","querySelectorAll","cont","forEach","tab","putDataColumns","setAttribute","columns","col","addTab","deleteActiveCell","section","querySelector","newTab","createElement","classList","add","innerHTML","appendChild","deleteTab","lastChild","remove","saveCommand","fn","revFn","keep","cellElement","getActiveCell","push","action","key","textContent","inverse","length","undo","lastCommand","pop","addActiveCell","index","redo","string","modifyUndoArray","typeNotes","addLine","tabElement","verifyColumn","newCol","deleteLine","addBlankCol","blankCol","deleteBlankCol","cell","parentElement","dataset","colElement","moveDown","verifyTab","moveUp","moveRight","moveLeft","note","txt","replace","substring","addEventListener","evt","target","tagName","isNaN","includes"],"mappings":"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","file":"app.js","sourcesContent":["const MIN_STRING = \"1\";\r\nconst MAX_STRING = \"6\";\r\nconst MIN_COLUMN = \"3\";\r\nconst MAX_COLUMNS = \"32\";\r\n\r\nconst GUITAR_TECHNIQUES = [\r\n  \"h\",\r\n  \"H\",\r\n  \"p\",\r\n  \"P\",\r\n  \"/\",\r\n  \"b\",\r\n  \"B\",\r\n  \"x\",\r\n  \"X\",\r\n  \"Backspace\",\r\n];\r\n\r\nconst undoArray = [];\r\nconst redoArray = [];\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  updateDataInfo();\r\n\r\n  document.addEventListener(\"keydown\", (evt) => {\r\n    const { string, col, tab } = getActiveCell();\r\n    const { key, target } = evt;\r\n\r\n    if (target.tagName === \"BODY\") {\r\n      switch (key) {\r\n        case \"t\":\r\n        case \"T\":\r\n          saveCommand(addTab, deleteTab);\r\n          addTab();\r\n          updateDataInfo();\r\n          break;\r\n        case \"q\":\r\n        case \"Q\":\r\n          undo();\r\n          break;\r\n        case \"e\":\r\n        case \"E\":\r\n          redo();\r\n          break;\r\n        case \"Enter\":\r\n          if (col !== MAX_COLUMNS) {\r\n            saveCommand(addLine, deleteLine);\r\n            addLine();\r\n            updateDataInfo();\r\n          }\r\n          break;\r\n        case \"l\":\r\n        case \"L\":\r\n          if (col !== MAX_COLUMNS) {\r\n            saveCommand(addBlankCol, deleteBlankCol);\r\n            addBlankCol();\r\n            updateDataInfo();\r\n          }\r\n          break;\r\n        case \"s\":\r\n        case \"S\":\r\n        case \"ArrowDown\":\r\n          if (\r\n            (string === MAX_STRING && verifyTab(+tab + 1)) ||\r\n            string !== MAX_STRING\r\n          ) {\r\n            saveCommand(moveDown, moveUp);\r\n          }\r\n          moveDown();\r\n          break;\r\n        case \"w\":\r\n        case \"W\":\r\n        case \"ArrowUp\":\r\n          if (\r\n            (string === MIN_STRING && verifyTab(+tab - 1)) ||\r\n            string !== MIN_STRING\r\n          ) {\r\n            saveCommand(moveUp, moveDown);\r\n          }\r\n          moveUp();\r\n          break;\r\n        case \"a\":\r\n        case \"A\":\r\n        case \"ArrowLeft\":\r\n          if (col !== MIN_COLUMN) {\r\n            saveCommand(moveLeft, moveRight);\r\n            moveLeft();\r\n          }\r\n          break;\r\n        case \"d\":\r\n        case \"D\":\r\n        case \"ArrowRight\":\r\n          if (col !== MAX_COLUMNS) {\r\n            saveCommand(moveRight, moveLeft);\r\n            moveRight();\r\n          }\r\n          break;\r\n      }\r\n\r\n      if (!isNaN(key) || GUITAR_TECHNIQUES.includes(key)) {\r\n        typeNotes(key);\r\n      }\r\n    }\r\n  });\r\n});\r\n\r\nfunction updateDataInfo() {\r\n  putDataTabs();\r\n  putDataStrings();\r\n}\r\n\r\nfunction putDataTabs() {\r\n  const tabs = document.querySelectorAll(\".tabs\");\r\n  let cont = 1;\r\n\r\n  tabs.forEach((tab) => {\r\n    putDataColumns(tab);\r\n    tab.setAttribute(\"data-tab\", cont);\r\n    cont++;\r\n  });\r\n}\r\n\r\nfunction putDataColumns(tab) {\r\n  const columns = tab.querySelectorAll(\".tabs__column\");\r\n  let cont = 1;\r\n\r\n  columns.forEach((col) => {\r\n    col.setAttribute(\"data-col\", cont);\r\n    cont++;\r\n  });\r\n}\r\n\r\nfunction putDataStrings() {\r\n  const tabs = document.querySelectorAll(\".tabs__column .tabs__cell\");\r\n  let cont = 1;\r\n\r\n  tabs.forEach((tab) => {\r\n    tab.setAttribute(\"data-string\", cont);\r\n    cont++;\r\n\r\n    if (cont == 7) {\r\n      cont = 1;\r\n    }\r\n  });\r\n}\r\n\r\nfunction addTab() {\r\n  deleteActiveCell();\r\n\r\n  const section = document.querySelector(\".content__tabs\");\r\n  const newTab = document.createElement(\"div\");\r\n\r\n  newTab.classList.add(\"tabs\");\r\n\r\n  newTab.innerHTML = `\r\n  <div class=\"tabs__column\">\r\n    <span class=\"tabs__cell\">E</span>\r\n    <span class=\"tabs__cell\">B</span>\r\n    <span class=\"tabs__cell\">G</span>\r\n    <span class=\"tabs__cell\">D</span>\r\n    <span class=\"tabs__cell\">A</span>\r\n    <span class=\"tabs__cell\">E</span>\r\n  </div>\r\n  <div class=\"tabs__column\">\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n  </div>\r\n  <div class=\"tabs__column\">\r\n    <span class=\"tabs__cell tabs__cell-active\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n  </div>\r\n  `;\r\n\r\n  section.appendChild(newTab);\r\n}\r\n\r\nfunction deleteTab() {\r\n  const section = document.querySelector(\".content__tabs\");\r\n  const lastChild = section.lastChild;\r\n  lastChild.remove();\r\n}\r\n\r\nfunction saveCommand(fn, revFn, keep = true) {\r\n  const { cellElement } = getActiveCell();\r\n  undoArray.push({\r\n    action: {\r\n      fn,\r\n      key: cellElement.textContent,\r\n    },\r\n    inverse: {\r\n      revFn,\r\n    },\r\n  });\r\n\r\n  //When something it's added the the redo array is restarted. This because we only need the redo after a undo, not after adding something.\r\n  if (keep) {\r\n    redoArray.length = 0;\r\n  }\r\n}\r\n\r\nfunction undo() {\r\n  const lastCommand = undoArray.pop();\r\n\r\n  const { cellElement } = getActiveCell();\r\n  const key = cellElement.textContent;\r\n  cellElement.textContent = \"—\";\r\n\r\n  if (lastCommand) {\r\n    const fn = lastCommand.inverse.revFn;\r\n\r\n    const result = fn();\r\n\r\n    //We add this conditional to avoid multiple calls to the addActiveCell function. The function that is going to be called is the one that is inside fn()\r\n    if (result !== \"move\") {\r\n      addActiveCell(lastCommand.action.index);\r\n    }\r\n\r\n    //We add the undo function to the redo array\r\n    redoArray.push({\r\n      action: {\r\n        fn,\r\n        key,\r\n      },\r\n      inverse: {\r\n        revFn: lastCommand.action.fn,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nfunction redo() {\r\n  const lastCommand = redoArray.pop();\r\n  const { string, col, tab } = getActiveCell();\r\n\r\n  if (lastCommand) {\r\n    const fn = lastCommand.inverse.revFn;\r\n    saveCommand(fn, lastCommand.action.fn, false); //False to avoid reset the redo\r\n\r\n    modifyUndoArray({ string, col, tab });\r\n\r\n    fn();\r\n    typeNotes(lastCommand.action.key);\r\n    updateDataInfo();\r\n  }\r\n}\r\n\r\nfunction addLine() {\r\n  const { tabElement } = getActiveCell();\r\n\r\n  if (!verifyColumn(tabElement, MAX_COLUMNS)) {\r\n    deleteActiveCell();\r\n    const newCol = document.createElement(\"div\");\r\n    newCol.classList.add(\"tabs__column\");\r\n    newCol.innerHTML = `\r\n    <span class=\"tabs__cell tabs__cell-active\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n    <span class=\"tabs__cell\">—</span>\r\n  `;\r\n    tabElement.appendChild(newCol);\r\n  }\r\n}\r\n\r\nfunction deleteLine() {\r\n  const { tabElement } = getActiveCell();\r\n\r\n  tabElement.lastChild.remove();\r\n}\r\n\r\nfunction addBlankCol() {\r\n  const { tabElement } = getActiveCell();\r\n\r\n  if (!verifyColumn(tabElement, MAX_COLUMNS)) {\r\n    deleteActiveCell();\r\n\r\n    const blankCol = document.createElement(\"div\");\r\n    const newCol = document.createElement(\"div\");\r\n\r\n    blankCol.classList.add(\"tabs__column\");\r\n    newCol.classList.add(\"tabs__column\");\r\n\r\n    blankCol.innerHTML = `\r\n      <span class=\"tabs__cell\">|</span>\r\n      <span class=\"tabs__cell\">|</span>\r\n      <span class=\"tabs__cell\">|</span>\r\n      <span class=\"tabs__cell\">|</span>\r\n      <span class=\"tabs__cell\">|</span>\r\n      <span class=\"tabs__cell\">|</span>\r\n    `;\r\n\r\n    newCol.innerHTML = `\r\n      <span class=\"tabs__cell tabs__cell-active\">—</span>\r\n      <span class=\"tabs__cell\">—</span>\r\n      <span class=\"tabs__cell\">—</span>\r\n      <span class=\"tabs__cell\">—</span>\r\n      <span class=\"tabs__cell\">—</span>\r\n      <span class=\"tabs__cell\">—</span>\r\n    `;\r\n\r\n    tabElement.appendChild(blankCol);\r\n    tabElement.appendChild(newCol);\r\n  }\r\n}\r\n\r\nfunction deleteBlankCol() {\r\n  const { tabElement } = getActiveCell();\r\n\r\n  tabElement.lastChild.remove();\r\n  tabElement.lastChild.remove();\r\n}\r\n\r\nfunction deleteActiveCell() {\r\n  const { cellElement, string, col, tab } = getActiveCell();\r\n\r\n  modifyUndoArray({ string, col, tab });\r\n\r\n  cellElement.classList.remove(\"tabs__cell-active\");\r\n}\r\n\r\nfunction addActiveCell({ string, col, tab }) {\r\n  const currTab = document.querySelector(`div[data-tab='${tab}']`);\r\n  const currCol = currTab.querySelector(`div[data-col='${col}']`);\r\n  const currString = currCol.querySelector(`span[data-string='${string}']`);\r\n\r\n  currString.classList.add(\"tabs__cell-active\");\r\n}\r\n\r\nfunction getActiveCell() {\r\n  const cell = document.querySelector(\".tabs__cell-active\");\r\n  const col = cell.parentElement;\r\n  const tab = col.parentElement;\r\n\r\n  return {\r\n    string: cell.dataset.string,\r\n    col: col.dataset.col,\r\n    tab: tab.dataset.tab,\r\n    tabElement: tab,\r\n    colElement: col,\r\n    cellElement: cell,\r\n  };\r\n}\r\n\r\nfunction moveDown() {\r\n  const { cellElement, string, col, tab } = getActiveCell();\r\n\r\n  if (string !== MAX_STRING) {\r\n    modifyUndoArray({ string, col, tab });\r\n    cellElement.classList.remove(\"tabs__cell-active\");\r\n    addActiveCell({ string: +string + 1, col, tab });\r\n  } else if (verifyTab(+tab + 1)) {\r\n    cellElement.classList.remove(\"tabs__cell-active\");\r\n    addActiveCell({ string: MIN_STRING, col: MIN_COLUMN, tab: +tab + 1 });\r\n  }\r\n  return \"move\";\r\n}\r\n\r\nfunction moveUp() {\r\n  const { cellElement, string, col, tab } = getActiveCell();\r\n\r\n  if (string !== MIN_STRING) {\r\n    cellElement.classList.remove(\"tabs__cell-active\");\r\n    addActiveCell({ string: +string - 1, col, tab });\r\n  } else if (verifyTab(+tab - 1)) {\r\n    cellElement.classList.remove(\"tabs__cell-active\");\r\n    addActiveCell({ string: MAX_STRING, col: MIN_COLUMN, tab: +tab - 1 });\r\n  }\r\n  return \"move\";\r\n}\r\n\r\nfunction moveRight() {\r\n  const { tabElement, cellElement, string, col, tab } = getActiveCell();\r\n\r\n  if (col !== MAX_COLUMNS) {\r\n    cellElement.classList.remove(\"tabs__cell-active\");\r\n    if (verifyColumn(tabElement, +col + 1)) {\r\n      addActiveCell({ string, col: +col + 1, tab });\r\n    } else {\r\n      addActiveCell({ string, col, tab });\r\n    }\r\n  }\r\n  return \"move\";\r\n}\r\n\r\nfunction moveLeft() {\r\n  const { tabElement, cellElement, string, col, tab } = getActiveCell();\r\n\r\n  if (col !== MIN_COLUMN) {\r\n    cellElement.classList.remove(\"tabs__cell-active\");\r\n    if (verifyColumn(tabElement, +col - 1)) {\r\n      addActiveCell({ string, col: +col - 1, tab });\r\n    } else {\r\n      addActiveCell({ string, col, tab });\r\n    }\r\n  }\r\n  return \"move\";\r\n}\r\n\r\nfunction verifyColumn(tabElement, col) {\r\n  return tabElement.querySelector(`div[data-col='${col}']`);\r\n}\r\n\r\nfunction verifyTab(tab) {\r\n  return document.querySelector(`div[data-tab='${tab}']`);\r\n}\r\n\r\nfunction typeNotes(note) {\r\n  const { cellElement } = getActiveCell();\r\n  const txt = cellElement.textContent;\r\n\r\n  if (txt !== \"|\" && note !== \" \") {\r\n    if (note !== \"Backspace\") {\r\n      cellElement.textContent = txt.replace(\"—\", \"\") + note;\r\n      return;\r\n    }\r\n\r\n    if (txt.length !== 1) {\r\n      cellElement.textContent = txt.substring(0, txt.length - 1);\r\n      return;\r\n    }\r\n\r\n    cellElement.textContent = \"—\";\r\n  }\r\n}\r\n\r\nfunction modifyUndoArray({ string, col, tab }) {\r\n  if (undoArray.length > 0) {\r\n    undoArray[undoArray.length - 1].action.index = { string, col, tab };\r\n  }\r\n}\r\n"]}