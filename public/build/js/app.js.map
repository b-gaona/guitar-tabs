{"version":3,"sources":["app.js"],"names":["undoArray","redoArray","MAX_COLUMNS","GUITAR_TECHNIQUES","updateDataInfo","putDataTabs","putDataColumns","putDataStrings","tabs","document","querySelectorAll","cont","forEach","tab","setAttribute","addTab","deleteActiveCell","section","querySelector","newTab","createElement","classList","add","innerHTML","appendChild","deleteTab","lastChild","remove","saveCommand","fn","revFn","keep","push","action","inverse","length","undo","lastCommand","pop","addActiveCell","index","redo","string","col","getActiveCell","addLine","tabElement","verifyColumn","newCol","deleteLine","addBlankCol","blankCol","deleteBlankCol","cellElement","cell","parentElement","dataset","colElement","moveDown","moveUp","moveRight","moveLeft","typeNotes","note","txt","textContent","substring","replace","addEventListener","evt","key","isNaN","includes","JSON","stringify"],"mappings":"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","file":"app.js","sourcesContent":["const undoArray = [];\r\nconst redoArray = [];\r\nconst MAX_COLUMNS = \"35\";\r\nconst GUITAR_TECHNIQUES = [\"h\", \"p\", \"/\", \"b\", \"x\", \"Backspace\"];\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  putDataTabs();\r\n  putDataStrings();\r\n  putDataColumns();\r\n\r\n  document.addEventListener(\"keydown\", (evt) => {\r\n    const { string, col } = getActiveCell();\r\n    const { key } = evt;\r\n    switch (key) {\r\n      case \"t\":\r\n        saveCommand(addTab, deleteTab);\r\n        addTab();\r\n        updateDataInfo();\r\n        break;\r\n      case \"q\":\r\n        undo();\r\n        break;\r\n      case \"e\":\r\n        redo();\r\n        break;\r\n      case \"Enter\":\r\n        if (col !== MAX_COLUMNS) {\r\n          saveCommand(addLine, deleteLine);\r\n          addLine();\r\n          updateDataInfo();\r\n        }\r\n        break;\r\n      case \"l\":\r\n        saveCommand(addBlankCol, deleteBlankCol);\r\n        addBlankCol();\r\n        updateDataInfo();\r\n        break;\r\n      case \"s\":\r\n        if (string !== \"6\") {\r\n          saveCommand(moveDown, moveUp);\r\n          moveDown();\r\n        }\r\n        break;\r\n      case \"w\":\r\n        if (string !== \"1\") {\r\n          saveCommand(moveUp, moveDown);\r\n          moveUp();\r\n        }\r\n        break;\r\n      case \"a\":\r\n        if (col !== \"3\") {\r\n          saveCommand(moveLeft, moveRight);\r\n          moveLeft();\r\n        }\r\n        break;\r\n      case \"d\":\r\n        if (col !== MAX_COLUMNS) {\r\n          saveCommand(moveRight, moveLeft);\r\n          moveRight();\r\n        }\r\n        break;\r\n    }\r\n\r\n    if (!isNaN(key) || GUITAR_TECHNIQUES.includes(key)) {\r\n      typeNotes(key);\r\n    }\r\n\r\n    const id = document.querySelector(\"#helper\");\r\n    id.textContent = JSON.stringify(undoArray);\r\n    const id2 = document.querySelector(\"#helper2\");\r\n    id2.textContent = JSON.stringify(redoArray);\r\n  });\r\n});\r\n\r\nfunction updateDataInfo() {\r\n  putDataTabs();\r\n  putDataColumns();\r\n  putDataStrings();\r\n}\r\n\r\nfunction putDataTabs() {\r\n  const tabs = document.querySelectorAll(\".tabs\");\r\n  let cont = 1;\r\n\r\n  tabs.forEach((tab) => {\r\n    tab.setAttribute(\"data-tab\", cont);\r\n    cont++;\r\n  });\r\n}\r\n\r\nfunction putDataColumns() {\r\n  const tabs = document.querySelectorAll(\".tabs__column\");\r\n  let cont = 1;\r\n\r\n  tabs.forEach((tab) => {\r\n    tab.setAttribute(\"data-col\", cont);\r\n    cont++;\r\n  });\r\n}\r\n\r\nfunction putDataStrings() {\r\n  const tabs = document.querySelectorAll(\".tabs__column .tabs__cell\");\r\n  let cont = 1;\r\n\r\n  tabs.forEach((tab) => {\r\n    tab.setAttribute(\"data-string\", cont);\r\n    cont++;\r\n\r\n    if (cont == 7) {\r\n      cont = 1;\r\n    }\r\n  });\r\n}\r\n\r\nfunction addTab() {\r\n  deleteActiveCell();\r\n\r\n  const section = document.querySelector(\".content__tabs\");\r\n  const newTab = document.createElement(\"div\");\r\n\r\n  newTab.classList.add(\"tabs\");\r\n\r\n  newTab.innerHTML = `\r\n  <div class=\"tabs__column\">\r\n    <span class=\"tabs__cell\">E</span>\r\n    <span class=\"tabs__cell\">B</span>\r\n    <span class=\"tabs__cell\">G</span>\r\n    <span class=\"tabs__cell\">D</span>\r\n    <span class=\"tabs__cell\">A</span>\r\n    <span class=\"tabs__cell\">E</span>\r\n  </div>\r\n  <div class=\"tabs__column\">\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n  </div>\r\n  <div class=\"tabs__column\">\r\n    <span class=\"tabs__cell tabs__cell-active\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n  </div>\r\n  `;\r\n\r\n  section.appendChild(newTab);\r\n}\r\n\r\nfunction deleteTab() {\r\n  const section = document.querySelector(\".content__tabs\");\r\n  const lastChild = section.lastChild;\r\n  lastChild.remove();\r\n}\r\n\r\nfunction saveCommand(fn, revFn, keep = true) {\r\n  undoArray.push({\r\n    action: {\r\n      fn,\r\n    },\r\n    inverse: {\r\n      revFn,\r\n    },\r\n  });\r\n\r\n  //When something it's added the the redo array is restarted. This because we only need the redo after a undo, not after adding something.\r\n  if (keep) {\r\n    redoArray.length = 0;\r\n  }\r\n}\r\n\r\nfunction undo() {\r\n  const lastCommand = undoArray.pop();\r\n\r\n  if (lastCommand) {\r\n    const fn = lastCommand.inverse.revFn;\r\n\r\n    const result = fn();\r\n\r\n    //We add this conditional to avoid multiple calls to the addActiveCell function. The function that is going to be called is the one that is inside fn()\r\n    if (result !== \"move\") {\r\n      addActiveCell(lastCommand.action.index);\r\n    }\r\n\r\n    //We add the undo function to the redo array\r\n    redoArray.push({\r\n      action: {\r\n        fn,\r\n      },\r\n      inverse: {\r\n        revFn: lastCommand.action.fn,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nfunction redo() {\r\n  const lastCommand = redoArray.pop();\r\n  const { string, col, tab } = getActiveCell();\r\n\r\n  if (lastCommand) {\r\n    const fn = lastCommand.inverse.revFn;\r\n    saveCommand(fn, lastCommand.action.fn, false); //False to avoid reset the redo\r\n\r\n    if (undoArray.length > 0) {\r\n      undoArray[undoArray.length - 1].action.index = { string, col, tab };\r\n    }\r\n\r\n    fn();\r\n    updateDataInfo();\r\n  }\r\n}\r\n\r\nfunction addLine() {\r\n  const { tabElement } = getActiveCell();\r\n\r\n  if (!verifyColumn(tabElement, 35)) {\r\n    deleteActiveCell();\r\n    const newCol = document.createElement(\"div\");\r\n    newCol.classList.add(\"tabs__column\");\r\n    newCol.innerHTML = `\r\n    <span class=\"tabs__cell tabs__cell-active\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n  `;\r\n    tabElement.appendChild(newCol);\r\n  }\r\n}\r\n\r\nfunction deleteLine() {\r\n  const { tabElement } = getActiveCell();\r\n\r\n  tabElement.lastChild.remove();\r\n}\r\n\r\nfunction addBlankCol() {\r\n  const { tabElement } = getActiveCell();\r\n\r\n  deleteActiveCell();\r\n\r\n  const blankCol = document.createElement(\"div\");\r\n  const newCol = document.createElement(\"div\");\r\n\r\n  blankCol.classList.add(\"tabs__column\");\r\n  newCol.classList.add(\"tabs__column\");\r\n\r\n  blankCol.innerHTML = `\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n    <span class=\"tabs__cell\">|</span>\r\n  `;\r\n\r\n  newCol.innerHTML = `\r\n    <span class=\"tabs__cell tabs__cell-active\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n    <span class=\"tabs__cell\">-</span>\r\n  `;\r\n\r\n  tabElement.appendChild(blankCol);\r\n  tabElement.appendChild(newCol);\r\n}\r\n\r\nfunction deleteBlankCol() {\r\n  const { tabElement } = getActiveCell();\r\n\r\n  tabElement.lastChild.remove();\r\n  tabElement.lastChild.remove();\r\n}\r\n\r\nfunction deleteActiveCell() {\r\n  const { cellElement, string, col, tab } = getActiveCell();\r\n\r\n  if (undoArray.length > 0) {\r\n    undoArray[undoArray.length - 1].action.index = { string, col, tab };\r\n  }\r\n\r\n  cellElement.classList.remove(\"tabs__cell-active\");\r\n}\r\n\r\nfunction addActiveCell({ string, col, tab }) {\r\n  const currTab = document.querySelector(`div[data-tab='${tab}']`);\r\n  const currCol = currTab.querySelector(`div[data-col='${col}']`);\r\n  const currString = currCol.querySelector(`span[data-string='${string}']`);\r\n\r\n  currString.classList.add(\"tabs__cell-active\");\r\n}\r\n\r\nfunction getActiveCell() {\r\n  const cell = document.querySelector(\".tabs__cell-active\");\r\n  const col = cell.parentElement;\r\n  const tab = col.parentElement;\r\n\r\n  return {\r\n    string: cell.dataset.string,\r\n    col: col.dataset.col,\r\n    tab: tab.dataset.tab,\r\n    tabElement: tab,\r\n    colElement: col,\r\n    cellElement: cell,\r\n  };\r\n}\r\n\r\nfunction moveDown() {\r\n  const { cellElement, string, col, tab } = getActiveCell();\r\n\r\n  if (string !== \"6\") {\r\n    if (undoArray.length > 0) {\r\n      undoArray[undoArray.length - 1].action.index = { string, col, tab };\r\n    }\r\n    cellElement.classList.remove(\"tabs__cell-active\");\r\n    addActiveCell({ string: +string + 1, col, tab });\r\n  }\r\n  return \"move\";\r\n}\r\n\r\nfunction moveUp() {\r\n  const { cellElement, string, col, tab } = getActiveCell();\r\n\r\n  if (string !== \"1\") {\r\n    cellElement.classList.remove(\"tabs__cell-active\");\r\n    addActiveCell({ string: +string - 1, col, tab });\r\n  }\r\n  return \"move\";\r\n}\r\n\r\nfunction moveRight() {\r\n  const { tabElement, cellElement, string, col, tab } = getActiveCell();\r\n\r\n  if (col !== MAX_COLUMNS) {\r\n    cellElement.classList.remove(\"tabs__cell-active\");\r\n    if (verifyColumn(tabElement, +col + 1)) {\r\n      addActiveCell({ string, col: +col + 1, tab });\r\n    } else {\r\n      addActiveCell({ string, col, tab });\r\n    }\r\n  }\r\n  return \"move\";\r\n}\r\n\r\nfunction moveLeft() {\r\n  const { tabElement, cellElement, string, col, tab } = getActiveCell();\r\n\r\n  if (col !== \"3\") {\r\n    cellElement.classList.remove(\"tabs__cell-active\");\r\n    if (verifyColumn(tabElement, +col - 1)) {\r\n      addActiveCell({ string, col: +col - 1, tab });\r\n    } else {\r\n      addActiveCell({ string, col, tab });\r\n    }\r\n  }\r\n  return \"move\";\r\n}\r\n\r\nfunction verifyColumn(tabElement, col) {\r\n  return tabElement.querySelector(`div[data-col='${col}']`);\r\n}\r\n\r\nfunction typeNotes(note) {\r\n  const { cellElement } = getActiveCell();\r\n  const txt = cellElement.textContent;\r\n\r\n  if (note !== \"Backspace\") {\r\n    cellElement.textContent = txt.replace(\"-\", \"\") + note;\r\n    return;\r\n  }\r\n\r\n  if (txt.length !== 1) {\r\n    cellElement.textContent = txt.substring(0, txt.length - 1);\r\n    return;\r\n  }\r\n\r\n  cellElement.textContent = \"-\";\r\n}\r\n"]}